# Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

# Disable build id note requirement for now
%undefine _missing_build_ids_terminate_build

# Force special prefix for Vespa
%define _prefix /opt/vespa-deps

# No debug package.
%global debug_package %{nil}

# Don't provide shared library or pkgconfig
%global __provides_exclude ^(lib.*\\.so\\.[0-9.]*\\([A-Z._0-9]*\\)\\(64bit\\)|pkgconfig\\(.*)$

%global __requires_exclude ^libonnxruntime\\.so\\.[0-9.]*\\([A-Z._0-9]*\\)\\(64bit\\)$

# Version
%define ver_major _TMPL_VER_MAJOR
%define ver_minor _TMPL_VER_MINOR
%define ver_patch _TMPL_VER_PATCH
%define ver_release _TMPL_VER_RELEASE

Summary:        ONNX Runtime package for Vespa
Name:           vespa-onnxruntime
Version:        %{ver_major}.%{ver_minor}.%{ver_patch}
Release:        %{ver_release}%{?dist}
License:        MIT License
URL:            https://microsoft.github.io/onnxruntime
Source0:        vespa-onnxruntime-%{version}.tar.gz

%if 0%{?el7}
%define _devtoolset_enable /opt/rh/devtoolset-9/enable
BuildRequires: devtoolset-9-gcc-c++%{?_isa}
BuildRequires: cmake3
%define _cmake_prog cmake3
%define _ctest_prog ctest3
%endif
%if 0%{?el8}
%define _devtoolset_enable /opt/rh/gcc-toolset-9/enable
BuildRequires: gcc-toolset-9-gcc-c++
BuildRequires: make
BuildRequires: glibc-langpack-en
%define _cmake_prog cmake3
%define _ctest_prog ctest3
%endif
%if 0%{?fedora}
BuildRequires: gcc-c++
BuildRequires: make
BuildRequires: cmake
BuildRequires: glibc-langpack-en
%define _cmake_prog cmake
%define _ctest_prog ctest
%endif
BuildRequires: zlib-devel
BuildRequires: redhat-lsb-core
BuildRequires: expat-devel
BuildRequires: libcurl-devel
BuildRequires: python3-devel
BuildRequires: python3-numpy
BuildRequires: libunwind
BuildRequires: python3-setuptools
BuildRequires: bzip2

%description
ONNX Runtime package for Vespa.

See https://github.com/vespa-engine/vespa-3rdparty-deps for details
about packaging.

%package devel
Summary:        ONNX Runtime dev package for Vespa.
Requires:       %{name} = %{version}-%{release}

%description devel
%{version} dev package for Vespa.

See https://github.com/vespa-engine/vespa-3rdparty-deps for details
about packaging.
%prep
%setup -q

%if 0%{?el8}
# Build and install CentOS 7 version of cmake3 on CentOS 8.
if rpm -q cmake3
then
  :
else
  dnf -y erase cmake-*
  if rpm -q libuv-devel
  then
    :
  else
    rm -rf rpmbuild-libuv
    dnf download --source libuv
    dnf -y builddep libuv-*.src.rpm
    rpmbuild --define="_topdir $(pwd)/rpmbuild-libuv" -rb libuv-*.src.rpm
    dnf -y install rpmbuild-libuv/RPMS/x86_64/libuv-devel-*.rpm
    rm -rf rpmbuild-libuv
  fi
  rm -rf rpmbuild-cmake3
  dnf download --disablerepo='*' --enablerepo=epel-source --releasever=7 --source cmake3
  rpm --define="_topdir $(pwd)/rpmbuild-cmake3" -i cmake3-*.src.rpm
  dnf -y --enablerepo=PowerTools builddep --define "_without_test --without-test" --define "_without_gui --without-gui" rpmbuild-cmake3/SPECS/cmake3.spec
 rpmbuild --define="_topdir $(pwd)/rpmbuild-cmake3" --without test --without gui -bb rpmbuild-cmake3/SPECS/cmake3.spec
  dnf -y install rpmbuild-cmake3/RPMS/x86_64/cmake3*.rpm rpmbuild-cmake3/RPMS/noarch/cmake3*.rpm
  rm -rf rpmbuild-cmake3
fi
%endif

%build

%if 0%{?_devtoolset_enable:1}
source %{_devtoolset_enable} || true
%endif

./build.sh --config RelWithDebInfo --build_shared_lib --parallel --cmake_path %{_cmake_prog} --ctest_path %{_ctest_prog} --skip_submodule_sync --cmake_extra_defines CMAKE_INSTALL_PREFIX=%{_prefix} onnxruntime_DEV_MODE=OFF onnxruntime_USE_OPENMP=OFF

%install
rm -rf $RPM_BUILD_ROOT

%if 0%{?_devtoolset_enable:1}
source %{_devtoolset_enable} || true
%endif

make -C build/Linux/RelWithDebInfo DESTDIR=%{buildroot} install

# Compat links with tarfile distribution
ln -s core/session/onnxruntime_c_api.h %{buildroot}%{_prefix}/include/onnxruntime/onnxruntime_c_api.h
ln -s core/session/onnxruntime_cxx_api.h %{buildroot}%{_prefix}/include/onnxruntime/onnxruntime_cxx_api.h
ln -s core/session/onnxruntime_cxx_inline.h %{buildroot}%{_prefix}/include/onnxruntime/onnxruntime_cxx_inline.h

%files
%{_prefix}/lib64/
%exclude %{_prefix}/bin/
%license LICENSE

%files devel
%{_prefix}/include/
%license LICENSE

%changelog
